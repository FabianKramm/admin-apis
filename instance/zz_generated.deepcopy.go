//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by deepcopy-gen. DO NOT EDIT.

package instance

import (
	auth "github.com/loft-sh/license-api/auth"
	feature "github.com/loft-sh/license-api/feature"
	button "github.com/loft-sh/license-api/instance/button"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Analytics) DeepCopyInto(out *Analytics) {
	*out = *in
	if in.Requests != nil {
		in, out := &in.Requests, &out.Requests
		*out = make([]Request, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Analytics.
func (in *Analytics) DeepCopy() *Analytics {
	if in == nil {
		return nil
	}
	out := new(Analytics)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Announcement) DeepCopyInto(out *Announcement) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Announcement.
func (in *Announcement) DeepCopy() *Announcement {
	if in == nil {
		return nil
	}
	out := new(Announcement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateInput) DeepCopyInto(out *CreateInput) {
	*out = *in
	if in.InstanceToken != nil {
		in, out := &in.InstanceToken, &out.InstanceToken
		*out = new(auth.InstanceToken)
		**out = **in
	}
	if in.AllocatedResources != nil {
		in, out := &in.AllocatedResources, &out.AllocatedResources
		*out = new(map[string]ResourceQuantity)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]ResourceQuantity, len(*in))
			for key, val := range *in {
				(*out)[key] = val
			}
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateInput.
func (in *CreateInput) DeepCopy() *CreateInput {
	if in == nil {
		return nil
	}
	out := new(CreateInput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateOutput) DeepCopyInto(out *CreateOutput) {
	*out = *in
	if in.License != nil {
		in, out := &in.License, &out.License
		*out = new(License)
		(*in).DeepCopyInto(*out)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateOutput.
func (in *CreateOutput) DeepCopy() *CreateOutput {
	if in == nil {
		return nil
	}
	out := new(CreateOutput)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LegacyLicense) DeepCopyInto(out *LegacyLicense) {
	*out = *in
	if in.Announcements != nil {
		in, out := &in.Announcements, &out.Announcements
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make(map[string]bool, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.Analytics != nil {
		in, out := &in.Analytics, &out.Analytics
		*out = new(Analytics)
		(*in).DeepCopyInto(*out)
	}
	if in.Buttons != nil {
		in, out := &in.Buttons, &out.Buttons
		*out = make([]button.Button, len(*in))
		copy(*out, *in)
	}
	if in.BlockRequests != nil {
		in, out := &in.BlockRequests, &out.BlockRequests
		*out = make([]Request, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make([]ResourceQuantity, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LegacyLicense.
func (in *LegacyLicense) DeepCopy() *LegacyLicense {
	if in == nil {
		return nil
	}
	out := new(LegacyLicense)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *License) DeepCopyInto(out *License) {
	*out = *in
	if in.Analytics != nil {
		in, out := &in.Analytics, &out.Analytics
		*out = new(Analytics)
		(*in).DeepCopyInto(*out)
	}
	if in.Buttons != nil {
		in, out := &in.Buttons, &out.Buttons
		*out = make([]button.Button, len(*in))
		copy(*out, *in)
	}
	if in.Announcements != nil {
		in, out := &in.Announcements, &out.Announcements
		*out = make([]Announcement, len(*in))
		copy(*out, *in)
	}
	if in.BlockRequests != nil {
		in, out := &in.BlockRequests, &out.BlockRequests
		*out = make([]Request, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Limits != nil {
		in, out := &in.Limits, &out.Limits
		*out = make([]ResourceQuantity, len(*in))
		copy(*out, *in)
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]feature.Entry, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new License.
func (in *License) DeepCopy() *License {
	if in == nil {
		return nil
	}
	out := new(License)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Request) DeepCopyInto(out *Request) {
	*out = *in
	if in.Verbs != nil {
		in, out := &in.Verbs, &out.Verbs
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Request.
func (in *Request) DeepCopy() *Request {
	if in == nil {
		return nil
	}
	out := new(Request)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceQuantity) DeepCopyInto(out *ResourceQuantity) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceQuantity.
func (in *ResourceQuantity) DeepCopy() *ResourceQuantity {
	if in == nil {
		return nil
	}
	out := new(ResourceQuantity)
	in.DeepCopyInto(out)
	return out
}
